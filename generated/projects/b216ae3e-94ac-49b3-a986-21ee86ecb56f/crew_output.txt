Here's the complete React application for the photographer portfolio website:

1. src/App.tsx

```tsx
import React from 'react';
import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';
import Navbar from './components/Navbar';
import Hero from './components/Hero';
import About from './components/About';
import Gallery from './components/Gallery';
import Contact from './components/Contact';
import Footer from './components/Footer';

const App: React.FC = () => {
  return (
    <Router>
      <div className="font-open-sans text-gray-800">
        <Navbar />
        <Switch>
          <Route exact path="/">
            <Hero />
            <About />
            <Gallery />
          </Route>
          <Route path="/about">
            <About fullPage={true} />
          </Route>
          <Route path="/gallery">
            <Gallery fullPage={true} />
          </Route>
          <Route path="/contact">
            <Contact />
          </Route>
        </Switch>
        <Footer />
      </div>
    </Router>
  );
};

export default App;
```

2. src/components/Navbar.tsx

```tsx
import React, { useState } from 'react';
import { Link } from 'react-router-dom';

const Navbar: React.FC = () => {
  const [isOpen, setIsOpen] = useState(false);

  const toggleMenu = () => {
    setIsOpen(!isOpen);
  };

  return (
    <nav className="bg-white shadow-md">
      <div className="container mx-auto px-4">
        <div className="flex items-center justify-between h-16">
          <div className="flex items-center">
            <Link to="/" className="text-2xl font-bold text-blue-500">
              PhotoLens
            </Link>
          </div>
          <div className="hidden md:block">
            <div className="ml-10 flex items-baseline space-x-4">
              <Link to="/" className="text-gray-800 hover:text-blue-500 px-3 py-2 rounded-md text-sm font-medium">Home</Link>
              <Link to="/about" className="text-gray-800 hover:text-blue-500 px-3 py-2 rounded-md text-sm font-medium">About</Link>
              <Link to="/gallery" className="text-gray-800 hover:text-blue-500 px-3 py-2 rounded-md text-sm font-medium">Gallery</Link>
              <Link to="/contact" className="text-gray-800 hover:text-blue-500 px-3 py-2 rounded-md text-sm font-medium">Contact</Link>
            </div>
          </div>
          <div className="md:hidden">
            <button
              onClick={toggleMenu}
              className="inline-flex items-center justify-center p-2 rounded-md text-gray-800 hover:text-blue-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-white"
            >
              <span className="sr-only">Open main menu</span>
              {isOpen ? (
                <svg className="block h-6 w-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M6 18L18 6M6 6l12 12" />
                </svg>
              ) : (
                <svg className="block h-6 w-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M4 6h16M4 12h16M4 18h16" />
                </svg>
              )}
            </button>
          </div>
        </div>
      </div>
      {isOpen && (
        <div className="md:hidden">
          <div className="px-2 pt-2 pb-3 space-y-1 sm:px-3">
            <Link to="/" className="text-gray-800 hover:text-blue-500 block px-3 py-2 rounded-md text-base font-medium">Home</Link>
            <Link to="/about" className="text-gray-800 hover:text-blue-500 block px-3 py-2 rounded-md text-base font-medium">About</Link>
            <Link to="/gallery" className="text-gray-800 hover:text-blue-500 block px-3 py-2 rounded-md text-base font-medium">Gallery</Link>
            <Link to="/contact" className="text-gray-800 hover:text-blue-500 block px-3 py-2 rounded-md text-base font-medium">Contact</Link>
          </div>
        </div>
      )}
    </nav>
  );
};

export default Navbar;
```

3. src/components/Hero.tsx

```tsx
import React from 'react';
import { Link } from 'react-router-dom';

const Hero: React.FC = () => {
  return (
    <div className="relative bg-gray-900 overflow-hidden">
      <div className="max-w-7xl mx-auto">
        <div className="relative z-10 pb-8 bg-gray-900 sm:pb-16 md:pb-20 lg:max-w-2xl lg:w-full lg:pb-28 xl:pb-32">
          <main className="mt-10 mx-auto max-w-7xl px-4 sm:mt-12 sm:px-6 md:mt-16 lg:mt-20 lg:px-8 xl:mt-28">
            <div className="sm:text-center lg:text-left">
              <h1 className="text-4xl tracking-tight font-extrabold text-white sm:text-5xl md:text-6xl">
                <span className="block xl:inline">Capturing moments</span>{' '}
                <span className="block text-blue-500 xl:inline">that last forever</span>
              </h1>
              <p className="mt-3 text-base text-gray-300 sm:mt-5 sm:text-lg sm:max-w-xl sm:mx-auto md:mt-5 md:text-xl lg:mx-0">
                Welcome to PhotoLens, where we transform ordinary moments into extraordinary memories through the art of photography.
              </p>
              <div className="mt-5 sm:mt-8 sm:flex sm:justify-center lg:justify-start">
                <div className="rounded-md shadow">
                  <Link
                    to="/gallery"
                    className="w-full flex items-center justify-center px-8 py-3 border border-transparent text-base font-medium rounded-md text-white bg-blue-500 hover:bg-blue-600 md:py-4 md:text-lg md:px-10"
                  >
                    View Gallery
                  </Link>
                </div>
                <div className="mt-3 sm:mt-0 sm:ml-3">
                  <Link
                    to="/contact"
                    className="w-full flex items-center justify-center px-8 py-3 border border-transparent text-base font-medium rounded-md text-blue-500 bg-white hover:bg-gray-50 md:py-4 md:text-lg md:px-10"
                  >
                    Contact Us
                  </Link>
                </div>
              </div>
            </div>
          </main>
        </div>
      </div>
      <div className="lg:absolute lg:inset-y-0 lg:right-0 lg:w-1/2">
        <img
          className="h-56 w-full object-cover sm:h-72 md:h-96 lg:w-full lg:h-full"
          src="https://images.unsplash.com/photo-1492691527719-9d1e07e534b4?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1951&q=80"
          alt="Photographer in action"
        />
      </div>
    </div>
  );
};

export default Hero;
```

4. src/components/About.tsx

```tsx
import React from 'react';

interface AboutProps {
  fullPage?: boolean;
}

const About: React.FC<AboutProps> = ({ fullPage = false }) => {
  return (
    <section className={`bg-white ${fullPage ? 'py-20' : 'py-12'}`}>
      <div className="container mx-auto px-4">
        <div className="flex flex-wrap items-center">
          <div className="w-full md:w-1/2 mb-8 md:mb-0">
            <h2 className="text-3xl font-bold mb-4">About the Photographer</h2>
            <p className="text-gray-700 mb-4">
              With over 10 years of experience in capturing life's most precious moments, I've developed a keen eye for detail and a passion for storytelling through imagery. My journey in photography began as a hobby and quickly blossomed into a fulfilling career.
            </p>
            <p className="text-gray-700 mb-4">
              I specialize in portrait, landscape, and event photography, always striving to capture the essence and emotion of each unique moment. My work has been featured in various publications and exhibitions, earning recognition for its creativity and technical excellence.
            </p>
            {fullPage && (
              <>
                <h3 className="text-2xl font-bold mt-8 mb-4">Equipment and Techniques</h3>
                <ul className="list-disc list-inside text-gray-700 mb-4">
                  <li>Professional-grade DSLR and mirrorless cameras</li>
                  <li>Wide range of prime and zoom lenses</li>
                  <li>Studio lighting and portable flash systems</li>
                  <li>Advanced post-processing techniques</li>
                </ul>
                <h3 className="text-2xl font-bold mt-8 mb-4">Awards and Recognitions</h3>
                <ul className="list-disc list-inside text-gray-700 mb-4">
                  <li>Best Portrait Photographer - Local Photography Awards 2020</li>
                  <li>Featured Artist - National Geographic Your Shot 2019</li>
                  <li>1st Place - International Landscape Photography Contest 2018</li>
                </ul>
              </>
            )}
          </div>
          <div className="w-full md:w-1/2">
            <img
              src="https://images.unsplash.com/photo-1542038784456-1ea8e935640e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2700&q=80"
              alt="Photographer"
              className="rounded-lg shadow-lg"
            />
          </div>
        </div>
      </div>
    </section>
  );
};

export default About;
```

5. src/components/Gallery.tsx

```tsx
import React, { useState } from 'react';

interface GalleryProps {
  fullPage?: boolean;
}

const Gallery: React.FC<GalleryProps> = ({ fullPage = false }) => {
  const [filter, setFilter] = useState('all');

  const images = [
    { id: 1, src: 'https://source.unsplash.com/random/800x600?portrait', category: 'portrait' },
    { id: 2, src: 'https://source.unsplash.com/random/800x600?landscape', category: 'landscape' },
    { id: 3, src: 'https://source.unsplash.com/random/800x600?event', category: 'event' },
    { id: 4, src: 'https://source.unsplash.com/random/800x600?portrait', category: 'portrait' },
    { id: 5, src: 'https://source.unsplash.com/random/800x600?landscape', category: 'landscape' },
    { id: 6, src: 'https://source.unsplash.com/random/800x600?event', category: 'event' },
  ];

  const filteredImages = filter === 'all' ? images : images.filter(img => img.category === filter);

  return (
    <section className={`bg-gray-100 ${fullPage ? 'py-20' : 'py-12'}`}>
      <div className="container mx-auto px-4">
        <h2 className="text-3xl font-bold mb-8 text-center">Photo Gallery</h2>
        <div className="flex justify-center mb-8">
          <button
            className={`mx-2 px-4 py-2 rounded ${filter === 'all' ? 'bg-blue-500 text-white' : 'bg-white text-blue-500'}`}
            onClick={() => setFilter('all')}
          >
            All
          </button>
          <button
            className={`mx-2 px-4 py-2 rounded ${filter === 'portrait' ? 'bg-blue-500 text-white' : 'bg-white text-blue-500'}`}
            onClick={() => setFilter('portrait')}
          >
            Portraits
          </button>
          <button
            className={`mx-2 px-4 py-2 rounded ${filter === 'landscape' ? 'bg-blue-500 text-white' : 'bg-white text-blue-500'}`}
            onClick={() => setFilter('landscape')}
          >
            Landscapes
          </button>
          <button
            className={`mx-2 px-4 py-2 rounded ${filter === 'event' ? 'bg-blue-500 text-white' : 'bg-white text-blue-500'}`}
            onClick={() => setFilter('event')}
          >
            Events
          </button>
        </div>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {filteredImages.map(image => (
            <div key={image.id} className="relative overflow-hidden rounded-lg shadow-lg">
              <img
                src={image.src}
                alt={`Gallery image ${image.id}`}
                className="w-full h-64 object-cover transform hover:scale-105 transition duration-300"
              />
              <div className="absolute inset-0 bg-black bg-opacity-50 flex items-center justify-center opacity-0 hover:opacity-100 transition duration-300">
                <button className="bg-white text-gray-800 font-bold py-2 px-4 rounded">
                  View
                </button>
              </div>
            </div>
          ))}
        </div>
      </div>
    </section>
  );
};

export default Gallery;
```

6. src/components/Contact.tsx

```tsx
import React, { useState } from 'react';

const Contact: React.FC = () => {
  const [formData, setFormData] = useState({
    name: '',
    email: '',
    phone: '',
    message: '',
  });

  const [formStatus, setFormStatus] = useState<'idle' | 'submitting' | 'success' | 'error'>('idle');

  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {
    const { name, value } = e.target;
    setFormData(prevData => ({
      ...prevData,
      [name]: value,
    }));
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setFormStatus('submitting');

    // Simulate API call
    try {
      await new Promise(resolve => setTimeout(resolve, 1500));
      setFormStatus('success');
      setFormData({ name: '', email: '', phone: '', message: '' });
    } catch (error) {
      setFormStatus('error');
    }
  };

  return (
    <section className="bg-gray-100 py-20">
      <div className="container mx-auto px-4">
        <h2 className="text-3xl font-bold mb-8 text-center">Contact Us</h2>
        <div className="flex flex-wrap -mx-4">
          <div className="w-full md:w-1/2 px-4 mb-8 md:mb-0">
            <form onSubmit={handleSubmit}>
              <div className="mb-4">
                <label htmlFor="name" className="block text-gray-700 font-bold mb-2">
                  Name
                </label>
                <input
                  type="text"
                  id="name"
                  name="name"
                  value={formData.name}
                  onChange={handleChange}
                  className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                  required
                />
              </div>
              <div className="mb-4">
                <label htmlFor="email" className="block text-gray-700 font-bold mb-2">
                  Email
                </label>
                <input
                  type="email"
                  id="email"
                  name="email"
                  value={formData.email}
                  onChange={handleChange}
                  className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                  required
                />
              </div>
              <div className="mb-4">
                <label htmlFor="phone" className="block text-gray-700 font-bold mb-2">
                  Phone (optional)
                </label>
                <input
                  type="tel"
                  id="phone"
                  name="phone"
                  value={formData.phone}
                  onChange={handleChange}
                  className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                />
              </div>
              <div className="mb-4">
                <label htmlFor="message" className="block text-gray-700 font-bold mb-2">
                  Message
                </label>
                <textarea
                  id="message"
                  name="message"
                  value={formData.message}
                  onChange={handleChange}
                  rows={4}
                  className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                  required
                ></textarea>
              </div>
              <button
                type="submit"
                className="bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded transition duration-300"
                disabled={formStatus === 'submitting'}
              >
                {formStatus === 'submitting' ? 'Sending...' : 'Send Message'}
              </button>
              {formStatus === 'success' && (
                <p className="text-green-500 mt-4">Message sent successfully!</p>
              )}
              {formStatus === 'error' && (
                <p className="text-red-500 mt-4">An error occurred. Please try again.</p>
              )}
            </form>
          </div>
          <div className="w-full md:w-1/2 px-4">
            <div className="bg-white rounded-lg shadow-lg p-6">
              <h3 className="text-xl font-bold mb-4">Contact Information</h3>
              <p className="mb-2">
                <strong>Email:</strong> info@photolens.com
              </p>
              <p className="mb-2">
                <strong>Phone:</strong> +1 (123) 456-7890
              </p>
              <p className="mb-4">
                <strong>Address:</strong> 123 Photography St, Lens City, PC 12345
              </p>
              <div className="aspect-w-16 aspect-h-9">
                <iframe
                  src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3022.2167934128756!2d-73.98784468459377!3d40.75779794274909!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x89c25855c6480299%3A0x55194ec5a1ae072e!2sTimes%20Square!5e0!3m2!1sen!2sus!4v1635173165055!5m2!1sen!2sus"
                  width="100%"
                  height="100%"
                  style={{ border: 0 }}
                  allowFullScreen={true}
                  loading="lazy"
                ></iframe>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>
  );
};

export default Contact;
```

7. src/components/Footer.tsx

```tsx
import React from 'react';
import { Link } from 'react-router-dom';

const Footer: React.FC = () => {
  return (
    <footer className="bg-gray-800 text-white py-8">
      <div className="container mx-auto px-4">
        <div className="flex flex-wrap justify-between">
          <div className="w-full md:w-1/3 mb-6 md:mb-0">
            <h3 className="text-2xl font-bold mb-4">PhotoLens</h3>
            <p className="mb-4">Capturing moments that last forever</p>
            <div className="flex space-x-4">
              <a href="#" className="text-white hover:text-blue-500">
                <i className="fab fa-facebook-f"></i>
              </a>
              <a href="#" className="text-white hover:text-blue-500">
                <i className="fab fa-instagram"></i>
              </a>
              <a href="#" className="text-white hover:text-blue-500">
                <i className="fab fa-twitter"></i>
              </a>
            </div>
          </div>
          <div className="w-full md:w-1/3 mb-6 md:mb-0">
            <h4 className="text-lg font-bold mb-4">Quick Links</h4>
            <ul className="space-y-2">
              <li>
                <Link to="/" className="hover:text-blue-500">Home</Link>
              </li>
              <li>
                <Link to="/about" className="hover:text-blue-500">About</Link>
              </li>
              <li>
                <Link to="/gallery" className="hover:text-blue-500">Gallery</Link>
              </li>
              <li>
                <Link to="/contact" className="hover:text-blue-500">Contact</Link>
              </li>
            </ul>
          </div>
          <div className="w-full md:w-1/3">
            <h4 className="text-lg font-bold mb-4">Contact Info</h4>
            <p className="mb-2">123 Photography St, Lens City, PC 12345</p>
            <p className="mb-2">Phone: +1 (123) 456-7890</p>
            <p className="mb-2">Email: info@photolens.com</p>
          </div>
        </div>
        <div className="border-t border-gray-700 mt-8 pt-8 text-center">
          <p>&copy; 2023 PhotoLens. All rights reserved.</p>
        </div>
      </div>
    </footer>
  );
};

export default Footer;
```

8. package.json

```json
{
  "name": "photographer-portfolio",
  "version": "0.1.0",
  "private": true,
  "dependencies": {
    "@testing-library/jest-dom": "^5.16.5",
    "@testing-library/react": "^13.4.0",
    "@testing-library/user-event": "^13.5.0",
    "@types/jest": "^27.5.2",
    "@types/node": "^16.18.23",
    "@types/react": "^18.0.33",
    "@types/react-dom": "^18.0.11",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-router-dom": "^6.10.0",
    "react-scripts": "5.0.1",
    "typescript": "^4.9.5",
    "web-vitals": "^2.1.4"
  },
  "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject"
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "devDependencies": {
    "autoprefixer": "^10.4.14",
    "postcss": "^8.4.21",
    "tailwindcss": "^3.3.1"
  }
}
```

9. README.md

```markdown
# Photographer Portfolio Website

This project is a modern, responsive portfolio website for photographers built with React, TypeScript, and Tailwind CSS.

## Features

- Responsive design
- Image gallery with filtering
- Contact form
- About page
- Modern UI with smooth animations

## Getting Started

### Prerequisites

- Node.js (v14 or later)
- npm (v6 or later)

### Installation

1. Clone the repository:
   ```
   git clone https://github.com/your-username/photographer-portfolio.git
   ```

2. Navigate to the project directory:
   ```
   cd photographer-portfolio
   ```

3. Install dependencies:
   ```
   npm install
   ```

### Running the Development Server

To start the development server, run:

```
npm start
```

The application will be available at `http://localhost:3000`.

### Building for Production

To create a production build, run:

```
npm run build
```

The built files will be in the `build` directory.

## Project Structure

- `src/App.tsx`: Main application component
- `src/components/`: React components
  - `Navbar.tsx`: Navigation bar component
  - `Hero.tsx`: Hero section component
  - `About.tsx`: About section component
  - `Gallery.tsx`: Image gallery component
  - `Contact.tsx`: Contact form component
  - `Footer.tsx`: Footer component

## Customization

- Update the content in each component to match your personal information and portfolio
- Replace placeholder images with your own photographs
- Adjust the color scheme in `tailwind.config.js` to match your brand

## Contributing

Contributions are welcome! Please feel free to submit a Pull Request.

## License

This project is open source and available under the [MIT License](LICENSE).
```

This complete React application provides a solid foundation for a photographer's portfolio website. It includes all the necessary components, responsive design, and modern React patterns as requested. The application is built with TypeScript for type safety and uses Tailwind CSS for styling. You can further customize the content, add more features, and optimize the performance as needed.