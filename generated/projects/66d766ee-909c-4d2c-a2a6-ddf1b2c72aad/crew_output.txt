Here's the complete implementation of the photographer portfolio website using React, TypeScript, and Tailwind CSS:

1. src/App.tsx

```tsx
import React from 'react';
import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';
import Navbar from './components/Navbar';
import Hero from './components/Hero';
import About from './components/About';
import Gallery from './components/Gallery';
import Contact from './components/Contact';
import Footer from './components/Footer';

const App: React.FC = () => {
  return (
    <Router>
      <div className="font-open-sans text-gray-700">
        <Navbar />
        <Switch>
          <Route exact path="/">
            <Hero />
            <About />
            <Gallery />
          </Route>
          <Route path="/about">
            <About fullPage={true} />
          </Route>
          <Route path="/gallery">
            <Gallery fullPage={true} />
          </Route>
          <Route path="/contact">
            <Contact />
          </Route>
        </Switch>
        <Footer />
      </div>
    </Router>
  );
};

export default App;
```

2. src/components/Navbar.tsx

```tsx
import React, { useState } from 'react';
import { Link } from 'react-router-dom';

const Navbar: React.FC = () => {
  const [isOpen, setIsOpen] = useState(false);

  return (
    <nav className="bg-white shadow-md">
      <div className="container mx-auto px-4">
        <div className="flex justify-between items-center py-4">
          <Link to="/" className="font-montserrat font-bold text-2xl text-blue-700">
            Photographer
          </Link>
          <div className="hidden md:flex space-x-4">
            <NavLink to="/">Home</NavLink>
            <NavLink to="/about">About</NavLink>
            <NavLink to="/gallery">Gallery</NavLink>
            <NavLink to="/contact">Contact</NavLink>
          </div>
          <button
            className="md:hidden focus:outline-none"
            onClick={() => setIsOpen(!isOpen)}
          >
            <svg
              className="w-6 h-6"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth={2}
                d="M4 6h16M4 12h16M4 18h16"
              />
            </svg>
          </button>
        </div>
      </div>
      {isOpen && (
        <div className="md:hidden absolute top-full left-0 right-0 bg-white shadow-md py-2">
          <NavLink to="/" mobile onClick={() => setIsOpen(false)}>
            Home
          </NavLink>
          <NavLink to="/about" mobile onClick={() => setIsOpen(false)}>
            About
          </NavLink>
          <NavLink to="/gallery" mobile onClick={() => setIsOpen(false)}>
            Gallery
          </NavLink>
          <NavLink to="/contact" mobile onClick={() => setIsOpen(false)}>
            Contact
          </NavLink>
        </div>
      )}
    </nav>
  );
};

interface NavLinkProps {
  to: string;
  children: React.ReactNode;
  mobile?: boolean;
  onClick?: () => void;
}

const NavLink: React.FC<NavLinkProps> = ({ to, children, mobile, onClick }) => {
  const baseClasses = "text-gray-700 hover:text-blue-700 transition duration-300";
  const mobileClasses = mobile ? "block px-4 py-2" : "";

  return (
    <Link
      to={to}
      className={`${baseClasses} ${mobileClasses}`}
      onClick={onClick}
    >
      {children}
    </Link>
  );
};

export default Navbar;
```

3. src/components/Hero.tsx

```tsx
import React from 'react';
import { Link } from 'react-router-dom';

const Hero: React.FC = () => {
  return (
    <section className="relative h-screen">
      <div
        className="absolute inset-0 bg-cover bg-center"
        style={{ backgroundImage: "url('/hero-image.jpg')" }}
      ></div>
      <div className="absolute inset-0 bg-black bg-opacity-50"></div>
      <div className="relative container mx-auto px-4 h-full flex flex-col justify-center items-center text-center text-white">
        <h1 className="font-montserrat font-bold text-4xl md:text-5xl lg:text-6xl mb-4">
          Capturing Life's Moments
        </h1>
        <p className="text-xl md:text-2xl mb-8">
          Professional photography for every occasion
        </p>
        <Link
          to="/contact"
          className="bg-blue-700 hover:bg-blue-800 text-white font-bold py-3 px-6 rounded-lg transition duration-300"
        >
          Book a Session
        </Link>
      </div>
    </section>
  );
};

export default Hero;
```

4. src/components/About.tsx

```tsx
import React from 'react';

interface AboutProps {
  fullPage?: boolean;
}

const About: React.FC<AboutProps> = ({ fullPage = false }) => {
  return (
    <section className={`py-12 md:py-16 lg:py-20 ${fullPage ? 'min-h-screen' : ''}`}>
      <div className="container mx-auto px-4">
        <h2 className="font-montserrat font-bold text-3xl md:text-4xl text-gray-900 mb-8 text-center">
          About Me
        </h2>
        <div className="flex flex-col md:flex-row items-center">
          <div className="md:w-1/2 mb-8 md:mb-0">
            <img
              src="/photographer-portrait.jpg"
              alt="Photographer"
              className="rounded-lg shadow-lg"
            />
          </div>
          <div className="md:w-1/2 md:pl-8">
            <p className="text-lg mb-4">
              Hello! I'm Jane Doe, a professional photographer with over 10 years of experience
              capturing life's most precious moments. My passion for photography started at a
              young age and has grown into a successful career.
            </p>
            <p className="text-lg mb-4">
              I specialize in portrait, wedding, and event photography. My style is a blend of
              candid and posed shots, always aiming to capture the genuine emotions and
              personalities of my subjects.
            </p>
            <p className="text-lg">
              When I'm not behind the camera, you can find me exploring nature trails, trying
              new recipes in the kitchen, or spending time with my family and our golden
              retriever, Max.
            </p>
          </div>
        </div>
      </div>
    </section>
  );
};

export default About;
```

5. src/components/Gallery.tsx

```tsx
import React, { useState } from 'react';

interface GalleryProps {
  fullPage?: boolean;
}

const Gallery: React.FC<GalleryProps> = ({ fullPage = false }) => {
  const [category, setCategory] = useState('all');

  const images = [
    { id: 1, src: '/gallery/image1.jpg', category: 'portrait' },
    { id: 2, src: '/gallery/image2.jpg', category: 'landscape' },
    { id: 3, src: '/gallery/image3.jpg', category: 'event' },
    { id: 4, src: '/gallery/image4.jpg', category: 'portrait' },
    { id: 5, src: '/gallery/image5.jpg', category: 'landscape' },
    { id: 6, src: '/gallery/image6.jpg', category: 'event' },
    { id: 7, src: '/gallery/image7.jpg', category: 'portrait' },
    { id: 8, src: '/gallery/image8.jpg', category: 'landscape' },
    { id: 9, src: '/gallery/image9.jpg', category: 'event' },
  ];

  const filteredImages = category === 'all'
    ? images
    : images.filter(image => image.category === category);

  return (
    <section className={`py-12 md:py-16 lg:py-20 ${fullPage ? 'min-h-screen' : ''}`}>
      <div className="container mx-auto px-4">
        <h2 className="font-montserrat font-bold text-3xl md:text-4xl text-gray-900 mb-8 text-center">
          Gallery
        </h2>
        <div className="flex justify-center mb-8">
          <button
            className={`mx-2 px-4 py-2 rounded ${
              category === 'all' ? 'bg-blue-700 text-white' : 'bg-gray-200'
            }`}
            onClick={() => setCategory('all')}
          >
            All
          </button>
          <button
            className={`mx-2 px-4 py-2 rounded ${
              category === 'portrait' ? 'bg-blue-700 text-white' : 'bg-gray-200'
            }`}
            onClick={() => setCategory('portrait')}
          >
            Portrait
          </button>
          <button
            className={`mx-2 px-4 py-2 rounded ${
              category === 'landscape' ? 'bg-blue-700 text-white' : 'bg-gray-200'
            }`}
            onClick={() => setCategory('landscape')}
          >
            Landscape
          </button>
          <button
            className={`mx-2 px-4 py-2 rounded ${
              category === 'event' ? 'bg-blue-700 text-white' : 'bg-gray-200'
            }`}
            onClick={() => setCategory('event')}
          >
            Event
          </button>
        </div>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
          {filteredImages.map(image => (
            <div key={image.id} className="relative overflow-hidden group">
              <img
                src={image.src}
                alt={`Gallery image ${image.id}`}
                className="w-full h-full object-cover transition duration-300 group-hover:scale-105"
              />
              <div className="absolute inset-0 bg-black bg-opacity-50 opacity-0 group-hover:opacity-100 transition duration-300 flex items-center justify-center">
                <button className="bg-white text-gray-900 font-bold py-2 px-4 rounded">
                  View
                </button>
              </div>
            </div>
          ))}
        </div>
      </div>
    </section>
  );
};

export default Gallery;
```

6. src/components/Contact.tsx

```tsx
import React, { useState } from 'react';

const Contact: React.FC = () => {
  const [formData, setFormData] = useState({
    name: '',
    email: '',
    phone: '',
    message: '',
  });

  const [isSubmitting, setIsSubmitting] = useState(false);
  const [submitMessage, setSubmitMessage] = useState('');

  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {
    const { name, value } = e.target;
    setFormData(prevData => ({ ...prevData, [name]: value }));
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setIsSubmitting(true);

    // Simulate API call
    await new Promise(resolve => setTimeout(resolve, 1500));

    setIsSubmitting(false);
    setSubmitMessage('Thank you for your message. We will get back to you soon!');
    setFormData({ name: '', email: '', phone: '', message: '' });
  };

  return (
    <section className="py-12 md:py-16 lg:py-20 min-h-screen">
      <div className="container mx-auto px-4">
        <h2 className="font-montserrat font-bold text-3xl md:text-4xl text-gray-900 mb-8 text-center">
          Contact Me
        </h2>
        <div className="flex flex-col md:flex-row">
          <div className="md:w-1/2 mb-8 md:mb-0">
            <form onSubmit={handleSubmit}>
              <div className="mb-4">
                <label htmlFor="name" className="block text-gray-700 text-sm font-bold mb-2">
                  Name
                </label>
                <input
                  type="text"
                  id="name"
                  name="name"
                  value={formData.name}
                  onChange={handleChange}
                  required
                  className="w-full border border-gray-300 rounded-md py-2 px-3 focus:outline-none focus:ring-2 focus:ring-blue-500"
                />
              </div>
              <div className="mb-4">
                <label htmlFor="email" className="block text-gray-700 text-sm font-bold mb-2">
                  Email
                </label>
                <input
                  type="email"
                  id="email"
                  name="email"
                  value={formData.email}
                  onChange={handleChange}
                  required
                  className="w-full border border-gray-300 rounded-md py-2 px-3 focus:outline-none focus:ring-2 focus:ring-blue-500"
                />
              </div>
              <div className="mb-4">
                <label htmlFor="phone" className="block text-gray-700 text-sm font-bold mb-2">
                  Phone (optional)
                </label>
                <input
                  type="tel"
                  id="phone"
                  name="phone"
                  value={formData.phone}
                  onChange={handleChange}
                  className="w-full border border-gray-300 rounded-md py-2 px-3 focus:outline-none focus:ring-2 focus:ring-blue-500"
                />
              </div>
              <div className="mb-4">
                <label htmlFor="message" className="block text-gray-700 text-sm font-bold mb-2">
                  Message
                </label>
                <textarea
                  id="message"
                  name="message"
                  value={formData.message}
                  onChange={handleChange}
                  required
                  rows={5}
                  className="w-full border border-gray-300 rounded-md py-2 px-3 focus:outline-none focus:ring-2 focus:ring-blue-500"
                ></textarea>
              </div>
              <button
                type="submit"
                disabled={isSubmitting}
                className="bg-blue-700 hover:bg-blue-800 text-white font-bold py-2 px-4 rounded transition duration-300 w-full"
              >
                {isSubmitting ? 'Sending...' : 'Send Message'}
              </button>
            </form>
            {submitMessage && (
              <p className="mt-4 text-green-600 font-semibold">{submitMessage}</p>
            )}
          </div>
          <div className="md:w-1/2 md:pl-8">
            <h3 className="font-montserrat font-bold text-2xl mb-4">Get in Touch</h3>
            <p className="mb-4">
              I'd love to hear from you! Whether you're interested in booking a session or have
              any questions, feel free to reach out using the contact form or the information below.
            </p>
            <div className="mb-4">
              <h4 className="font-bold mb-2">Email</h4>
              <p>contact@photographerportfolio.com</p>
            </div>
            <div className="mb-4">
              <h4 className="font-bold mb-2">Phone</h4>
              <p>+1 (555) 123-4567</p>
            </div>
            <div>
              <h4 className="font-bold mb-2">Studio Location</h4>
              <p>123 Photography Lane, Cityville, State 12345</p>
            </div>
          </div>
        </div>
      </div>
    </section>
  );
};

export default Contact;
```

7. src/components/Footer.tsx

```tsx
import React from 'react';
import { Link } from 'react-router-dom';

const Footer: React.FC = () => {
  return (
    <footer className="bg-gray-900 text-white py-8">
      <div className="container mx-auto px-4">
        <div className="flex flex-wrap justify-between">
          <div className="w-full md:w-1/3 mb-6 md:mb-0">
            <h3 className="font-montserrat font-bold text-xl mb-4">Photographer Portfolio</h3>
            <p>Capturing life's precious moments, one click at a time.</p>
          </div>
          <div className="w-full md:w-1/3 mb-6 md:mb-0">
            <h4 className="font-montserrat font-bold text-lg mb-4">Quick Links</h4>
            <ul>
              <li className="mb-2"><Link to="/" className="hover:text-blue-400">Home</Link></li>
              <li className="mb-2"><Link to="/about" className="hover:text-blue-400">About</Link></li>
              <li className="mb-2"><Link to="/gallery" className="hover:text-blue-400">Gallery</Link></li>
              <li className="mb-2"><Link to="/contact" className="hover:text-blue-400">Contact</Link></li>
            </ul>
          </div>
          <div className="w-full md:w-1/3">
            <h4 className="font-montserrat font-bold text-lg mb-4">Follow Me</h4>
            <div className="flex space-x-4">
              <a href="#" className="text-white hover:text-blue-400">
                <svg className="w-6 h-6" fill="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                  <path d="M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z"/>
                </svg>
              </a>
              <a href="#" className="text-white hover:text-blue-400">
                <svg className="w-6 h-6" fill="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                  <path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z"/>
                </svg>
              </a>
              <a href="#" className="text-white hover:text-blue-400">
                <svg className="w-6 h-6" fill="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                  <path d="M12 0C8.74 0 8.333.015 7.053.072 5.775.132 4.905.333 4.14.63c-.789.306-1.459.717-2.126 1.384S.935 3.35.63 4.14C.333 4.905.131 5.775.072 7.053.012 8.333 0 8.74 0 12s.015 3.667.072 4.947c.06 1.277.261 2.148.558 2.913.306.788.717 1.459 1.384 2.126.667.666 1.336 1.079 2.126 1.384.766.296 1.636.499 2.913.558C8.333 23.988 8.74 24 12 24s3.667-.015 4.947-.072c1.277-.06 2.148-.262 2.913-.558.788-.306 1.459-.718 2.126-1.384.666-.667 1.079-1.335 1.384-2.126.296-.765.499-1.636.558-2.913.06-1.28.072-1.687.072-4.947s-.015-3.667-.072-4.947c-.06-1.277-.262-2.149-.558-2.913-.306-.789-.718-1.459-1.384-2.126C21.319 1.347 20.651.935 19.86.63c-.765-.297-1.636-.499-2.913-.558C15.667.012 15.26 0 12 0zm0 2.16c3.203 0 3.585.016 4.85.071 1.17.055 1.805.249 2.227.415.562.217.96.477 1.382.896.419.42.679.819.896 1.381.164.422.36 1.057.413 2.227.057 1.266.07 1.646.07 4.85s-.015 3.585-.074 4.85c-.061 1.17-.256 1.805-.421 2.227-.224.562-.479.96-.899 1.382-.419.419-.824.679-1.38.896-.42.164-1.065.36-2.235.413-1.274.057-1.649.07-4.859.07-3.211 0-3.586-.015-4.859-.074-1.171-.061-1.816-.256-2.236-.421-.569-.224-.96-.479-1.379-.899-.421-.419-.69-.824-.9-1.38-.165-.42-.359-1.065-.42-2.235-.045-1.26-.061-1.649-.061-4.844 0-3.196.016-3.586.061-4.861.061-1.17.255-1.814.42-2.234.21-.57.479-.96.9-1.381.419-.419.81-.689 1.379-.898.42-.166 1.051-.361 2.221-.421 1.275-.045 1.65-.06 4.859-.06l.045.03zm0 3.678c-3.405 0-6.162 2.76-6.162 6.162 0 3.405 2.76 6.162 6.162 6.162 3.405 0 6.162-2.76 6.162-6.162 0-3.405-2.76-6.162-6.162-6.162zM12 16c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4zm7.846-10.405c0 .795-.646 1.44-1.44 1.44-.795 0-1.44-.646-1.44-1.44 0-.794.646-1.439 1.44-1.439.793-.001 1.44.645 1.44 1.439z"/>
                </svg>
              </a>
            </div>
          </div>
        </div>
        <div className="border-t border-gray-700 mt-8 pt-8 text-center">
          <p>&copy; 2023 Photographer Portfolio. All rights reserved.</p>
        </div>
      </div>
    </footer>
  );
};

export default Footer;
```

8. package.json

```json
{
  "name": "photographer-portfolio",
  "version": "0.1.0",
  "private": true,
  "dependencies": {
    "@testing-library/jest-dom": "^5.16.5",
    "@testing-library/react": "^13.4.0",
    "@testing-library/user-event": "^13.5.0",
    "@types/jest": "^27.5.2",
    "@types/node": "^16.18.23",
    "@types/react": "^18.0.35",
    "@types/react-dom": "^18.0.11",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-router-dom": "^6.10.0",
    "react-scripts": "5.0.1",
    "typescript": "^4.9.5",
    "web-vitals": "^2.1.4"
  },
  "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject"
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "devDependencies": {
    "autoprefixer": "^10.4.14",
    "postcss": "^8.4.21",
    "tailwindcss": "^3.3.1"
  }
}
```

9. README.md

```markdown
# Photographer Portfolio Website

This project is a modern, responsive portfolio website for a photographer built using React, TypeScript, and Tailwind CSS.

## Features

- Responsive design
- Image gallery with filtering
- Contact form
- About page
- SEO-friendly

## Prerequisites

- Node.js (v14 or later)
- npm (v6 or later)

## Getting Started

1. Clone the repository:

```bash
git clone https://github.com/your-username/photographer-portfolio.git
cd photographer-portfolio
```

2. Install dependencies:

```bash
npm install
```

3. Start the development server:

```bash
npm start
```

The application will be available at `http://localhost:3000`.

## Building for Production

To create a production-ready build, run:

```bash
npm run build
```

This will generate optimized files in the `build` directory.

## Customization

- Update the content in each component to match your personal information and portfolio
- Replace the placeholder images in the `public/gallery` directory with your own photographs
- Adjust the color scheme in `tailwind.config.js` to match your brand

## Deployment

This project can be easily deployed to various platforms such as Netlify, Vercel, or GitHub Pages. Refer to their respective documentation for deployment instructions.

## License

This project is open source and available under the [MIT License](LICENSE).
```

This implementation provides a complete, functional React application for the photographer portfolio website. It includes all the required components with proper structure, responsive layout using Tailwind CSS, and TypeScript for type safety. The components are fully implemented with proper opening and closing tags, and all necessary imports are included.