Here's the complete implementation of the photographer portfolio website using React, TypeScript, and Tailwind CSS:

1. src/App.tsx

```tsx
import React from 'react';
import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';
import Navbar from './components/Navbar';
import Hero from './components/Hero';
import About from './components/About';
import Gallery from './components/Gallery';
import Contact from './components/Contact';
import Footer from './components/Footer';

const App: React.FC = () => {
  return (
    <Router>
      <div className="flex flex-col min-h-screen">
        <Navbar />
        <main className="flex-grow">
          <Switch>
            <Route exact path="/">
              <Hero />
              <About />
              <Gallery />
            </Route>
            <Route path="/about">
              <About fullPage />
            </Route>
            <Route path="/gallery">
              <Gallery fullPage />
            </Route>
            <Route path="/contact">
              <Contact />
            </Route>
          </Switch>
        </main>
        <Footer />
      </div>
    </Router>
  );
};

export default App;
```

2. src/components/Navbar.tsx

```tsx
import React, { useState, useEffect } from 'react';
import { Link, useLocation } from 'react-router-dom';

const Navbar: React.FC = () => {
  const [isOpen, setIsOpen] = useState(false);
  const [isScrolled, setIsScrolled] = useState(false);
  const location = useLocation();

  useEffect(() => {
    const handleScroll = () => {
      setIsScrolled(window.scrollY > 0);
    };
    window.addEventListener('scroll', handleScroll);
    return () => window.removeEventListener('scroll', handleScroll);
  }, []);

  const navItems = [
    { name: 'Home', path: '/' },
    { name: 'About', path: '/about' },
    { name: 'Gallery', path: '/gallery' },
    { name: 'Contact', path: '/contact' },
  ];

  return (
    <nav className={`fixed w-full z-10 transition-all duration-300 ${isScrolled ? 'bg-white shadow-md' : 'bg-transparent'}`}>
      <div className="container mx-auto px-4">
        <div className="flex justify-between items-center py-4">
          <Link to="/" className="text-2xl font-bold text-blue-700">Photographer</Link>
          <div className="hidden md:flex space-x-4">
            {navItems.map((item) => (
              <Link
                key={item.name}
                to={item.path}
                className={`text-lg font-semibold ${location.pathname === item.path ? 'text-blue-700' : 'text-gray-700 hover:text-blue-700'}`}
              >
                {item.name}
              </Link>
            ))}
          </div>
          <button
            className="md:hidden focus:outline-none"
            onClick={() => setIsOpen(!isOpen)}
          >
            <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4 6h16M4 12h16M4 18h16" />
            </svg>
          </button>
        </div>
      </div>
      {isOpen && (
        <div className="md:hidden bg-white">
          {navItems.map((item) => (
            <Link
              key={item.name}
              to={item.path}
              className={`block py-2 px-4 text-lg ${location.pathname === item.path ? 'text-blue-700' : 'text-gray-700 hover:text-blue-700'}`}
              onClick={() => setIsOpen(false)}
            >
              {item.name}
            </Link>
          ))}
        </div>
      )}
    </nav>
  );
};

export default Navbar;
```

3. src/components/Hero.tsx

```tsx
import React from 'react';
import { Link } from 'react-router-dom';

const Hero: React.FC = () => {
  return (
    <section className="relative h-screen flex items-center justify-center bg-cover bg-center" style={{ backgroundImage: "url('/hero-image.jpg')" }}>
      <div className="absolute inset-0 bg-black opacity-50"></div>
      <div className="relative z-10 text-center text-white">
        <h1 className="text-4xl md:text-5xl lg:text-6xl font-bold mb-4">Capturing Moments, Creating Memories</h1>
        <p className="text-xl md:text-2xl mb-8">Professional photography for every occasion</p>
        <Link to="/contact" className="bg-blue-700 hover:bg-blue-800 text-white font-bold py-3 px-6 rounded-lg transition duration-300">
          Book Now
        </Link>
      </div>
    </section>
  );
};

export default Hero;
```

4. src/components/About.tsx

```tsx
import React from 'react';

interface AboutProps {
  fullPage?: boolean;
}

const About: React.FC<AboutProps> = ({ fullPage = false }) => {
  return (
    <section className={`py-12 md:py-16 lg:py-20 ${fullPage ? 'min-h-screen' : ''}`}>
      <div className="container mx-auto px-4">
        <h2 className="text-3xl md:text-4xl font-bold text-center mb-8">About Me</h2>
        <div className="flex flex-col md:flex-row items-center">
          <div className="md:w-1/2 mb-8 md:mb-0">
            <img src="/photographer.jpg" alt="Photographer" className="rounded-lg shadow-lg" />
          </div>
          <div className="md:w-1/2 md:pl-8">
            <p className="text-lg mb-4">
              Hello! I'm Jane Doe, a passionate photographer with over 10 years of experience capturing life's most beautiful moments.
            </p>
            <p className="text-lg mb-4">
              My journey in photography began when I received my first camera as a gift. Since then, I've honed my skills and developed a unique style that blends creativity with technical expertise.
            </p>
            <p className="text-lg mb-4">
              I specialize in portrait, landscape, and event photography. My goal is to create stunning images that tell your story and preserve your memories for years to come.
            </p>
            {fullPage && (
              <>
                <h3 className="text-2xl font-bold mt-8 mb-4">My Approach</h3>
                <p className="text-lg mb-4">
                  I believe that every photo should evoke emotion and capture the essence of the moment. My approach is to work closely with clients to understand their vision and bring it to life through my lens.
                </p>
                <h3 className="text-2xl font-bold mt-8 mb-4">Equipment</h3>
                <p className="text-lg mb-4">
                  I use top-of-the-line cameras and lenses to ensure the highest quality images. My kit includes:
                </p>
                <ul className="list-disc list-inside text-lg mb-4">
                  <li>Canon EOS R5 Mirrorless Camera</li>
                  <li>Canon RF 24-70mm f/2.8L IS USM Lens</li>
                  <li>Canon RF 70-200mm f/2.8L IS USM Lens</li>
                  <li>Profoto B10 Plus OCF Flash Head</li>
                </ul>
              </>
            )}
          </div>
        </div>
      </div>
    </section>
  );
};

export default About;
```

5. src/components/Gallery.tsx

```tsx
import React, { useState } from 'react';

interface GalleryProps {
  fullPage?: boolean;
}

const Gallery: React.FC<GalleryProps> = ({ fullPage = false }) => {
  const [selectedCategory, setSelectedCategory] = useState('all');

  const categories = ['all', 'portraits', 'landscapes', 'events'];

  const images = [
    { id: 1, src: '/gallery/image1.jpg', category: 'portraits' },
    { id: 2, src: '/gallery/image2.jpg', category: 'landscapes' },
    { id: 3, src: '/gallery/image3.jpg', category: 'events' },
    { id: 4, src: '/gallery/image4.jpg', category: 'portraits' },
    { id: 5, src: '/gallery/image5.jpg', category: 'landscapes' },
    { id: 6, src: '/gallery/image6.jpg', category: 'events' },
    { id: 7, src: '/gallery/image7.jpg', category: 'portraits' },
    { id: 8, src: '/gallery/image8.jpg', category: 'landscapes' },
    { id: 9, src: '/gallery/image9.jpg', category: 'events' },
  ];

  const filteredImages = selectedCategory === 'all'
    ? images
    : images.filter(image => image.category === selectedCategory);

  return (
    <section className={`py-12 md:py-16 lg:py-20 ${fullPage ? 'min-h-screen' : ''}`}>
      <div className="container mx-auto px-4">
        <h2 className="text-3xl md:text-4xl font-bold text-center mb-8">Gallery</h2>
        <div className="flex justify-center mb-8">
          {categories.map(category => (
            <button
              key={category}
              className={`mx-2 px-4 py-2 rounded-lg ${selectedCategory === category ? 'bg-blue-700 text-white' : 'bg-gray-200 text-gray-700'}`}
              onClick={() => setSelectedCategory(category)}
            >
              {category.charAt(0).toUpperCase() + category.slice(1)}
            </button>
          ))}
        </div>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
          {filteredImages.map(image => (
            <div key={image.id} className="relative overflow-hidden group">
              <img src={image.src} alt={`Gallery image ${image.id}`} className="w-full h-64 object-cover transition duration-300 group-hover:scale-105" />
              <div className="absolute inset-0 bg-black bg-opacity-50 opacity-0 group-hover:opacity-100 transition duration-300 flex items-center justify-center">
                <button className="bg-white text-gray-800 font-bold py-2 px-4 rounded">
                  View
                </button>
              </div>
            </div>
          ))}
        </div>
      </div>
    </section>
  );
};

export default Gallery;
```

6. src/components/Contact.tsx

```tsx
import React, { useState } from 'react';

const Contact: React.FC = () => {
  const [formData, setFormData] = useState({
    name: '',
    email: '',
    message: '',
  });

  const [isSubmitting, setIsSubmitting] = useState(false);
  const [submitMessage, setSubmitMessage] = useState('');

  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {
    const { name, value } = e.target;
    setFormData(prevData => ({ ...prevData, [name]: value }));
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setIsSubmitting(true);

    // Simulate API call
    try {
      await new Promise(resolve => setTimeout(resolve, 1500));
      setSubmitMessage('Thank you for your message. We\'ll get back to you soon!');
      setFormData({ name: '', email: '', message: '' });
    } catch (error) {
      setSubmitMessage('An error occurred. Please try again later.');
    } finally {
      setIsSubmitting(false);
    }
  };

  return (
    <section className="py-12 md:py-16 lg:py-20">
      <div className="container mx-auto px-4">
        <h2 className="text-3xl md:text-4xl font-bold text-center mb-8">Contact Me</h2>
        <div className="max-w-2xl mx-auto">
          <form onSubmit={handleSubmit}>
            <div className="mb-4">
              <label htmlFor="name" className="block text-gray-700 font-bold mb-2">Name</label>
              <input
                type="text"
                id="name"
                name="name"
                value={formData.name}
                onChange={handleChange}
                required
                className="w-full px-3 py-2 text-gray-700 border rounded-lg focus:outline-none focus:border-blue-500"
              />
            </div>
            <div className="mb-4">
              <label htmlFor="email" className="block text-gray-700 font-bold mb-2">Email</label>
              <input
                type="email"
                id="email"
                name="email"
                value={formData.email}
                onChange={handleChange}
                required
                className="w-full px-3 py-2 text-gray-700 border rounded-lg focus:outline-none focus:border-blue-500"
              />
            </div>
            <div className="mb-4">
              <label htmlFor="message" className="block text-gray-700 font-bold mb-2">Message</label>
              <textarea
                id="message"
                name="message"
                value={formData.message}
                onChange={handleChange}
                required
                rows={5}
                className="w-full px-3 py-2 text-gray-700 border rounded-lg focus:outline-none focus:border-blue-500"
              ></textarea>
            </div>
            <div className="text-center">
              <button
                type="submit"
                disabled={isSubmitting}
                className={`bg-blue-700 hover:bg-blue-800 text-white font-bold py-2 px-4 rounded-lg transition duration-300 ${isSubmitting ? 'opacity-50 cursor-not-allowed' : ''}`}
              >
                {isSubmitting ? 'Sending...' : 'Send Message'}
              </button>
            </div>
          </form>
          {submitMessage && (
            <p className="mt-4 text-center text-green-600">{submitMessage}</p>
          )}
        </div>
      </div>
    </section>
  );
};

export default Contact;
```

7. src/components/Footer.tsx

```tsx
import React from 'react';
import { Link } from 'react-router-dom';

const Footer: React.FC = () => {
  return (
    <footer className="bg-gray-800 text-white py-8">
      <div className="container mx-auto px-4">
        <div className="flex flex-wrap justify-between">
          <div className="w-full md:w-1/3 mb-6 md:mb-0">
            <h3 className="text-xl font-bold mb-4">Photographer Name</h3>
            <p>Capturing life's beautiful moments</p>
          </div>
          <div className="w-full md:w-1/3 mb-6 md:mb-0">
            <h3 className="text-xl font-bold mb-4">Quick Links</h3>
            <ul>
              <li><Link to="/" className="hover:text-blue-400">Home</Link></li>
              <li><Link to="/about" className="hover:text-blue-400">About</Link></li>
              <li><Link to="/gallery" className="hover:text-blue-400">Gallery</Link></li>
              <li><Link to="/contact" className="hover:text-blue-400">Contact</Link></li>
            </ul>
          </div>
          <div className="w-full md:w-1/3">
            <h3 className="text-xl font-bold mb-4">Connect</h3>
            <div className="flex space-x-4">
              <a href="#" className="text-2xl hover:text-blue-400"><i className="fab fa-facebook"></i></a>
              <a href="#" className="text-2xl hover:text-blue-400"><i className="fab fa-instagram"></i></a>
              <a href="#" className="text-2xl hover:text-blue-400"><i className="fab fa-twitter"></i></a>
              <a href="#" className="text-2xl hover:text-blue-400"><i className="fab fa-linkedin"></i></a>
            </div>
          </div>
        </div>
        <div className="border-t border-gray-700 mt-8 pt-8 text-center">
          <p>&copy; {new Date().getFullYear()} Photographer Name. All rights reserved.</p>
        </div>
      </div>
    </footer>
  );
};

export default Footer;
```

8. package.json

```json
{
  "name": "photographer-portfolio",
  "version": "0.1.0",
  "private": true,
  "dependencies": {
    "@testing-library/jest-dom": "^5.16.5",
    "@testing-library/react": "^13.4.0",
    "@testing-library/user-event": "^13.5.0",
    "@types/jest": "^27.5.2",
    "@types/node": "^16.18.23",
    "@types/react": "^18.0.33",
    "@types/react-dom": "^18.0.11",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-router-dom": "^6.10.0",
    "react-scripts": "5.0.1",
    "typescript": "^4.9.5",
    "web-vitals": "^2.1.4"
  },
  "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject"
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "devDependencies": {
    "autoprefixer": "^10.4.14",
    "postcss": "^8.4.21",
    "tailwindcss": "^3.3.1"
  }
}
```

9. README.md

```markdown
# Photographer Portfolio Website

This project is a modern, responsive portfolio website for a photographer built using React, TypeScript, and Tailwind CSS.

## Features

- Responsive design
- Image gallery with filtering
- About page
- Contact form
- Modern UI with smooth animations

## Prerequisites

- Node.js (v14 or later)
- npm (v6 or later)

## Installation

1. Clone the repository:
   ```
   git clone https://github.com/your-username/photographer-portfolio.git
   ```

2. Navigate to the project directory:
   ```
   cd photographer-portfolio
   ```

3. Install dependencies:
   ```
   npm install
   ```

## Running the Development Server

To start the development server, run:

```
npm start
```

This will start the app in development mode. Open [http://localhost:3000](http://localhost:3000) to view it in the browser.

## Building for Production

To create a production build, run:

```
npm run build
```

This will create an optimized build in the `build` folder.

## Customization

- Update the images in the `public/gallery` folder with the photographer's work.
- Modify the content in the components to match the photographer's information and style.
- Adjust the color scheme in the Tailwind CSS configuration file (`tailwind.config.js`) to match the desired brand colors.

## Learn More

To learn more about the technologies used in this project, check out the following resources:

- [React Documentation](https://reactjs.org/docs/getting-started.html)
- [TypeScript Documentation](https://www.typescriptlang.org/docs/)
- [Tailwind CSS Documentation](https://tailwindcss.com/docs)

## License

This project is open source and available under the [MIT License](LICENSE).
```

This implementation provides a complete React application for the photographer portfolio website, including all necessary components, routing, and responsive design using Tailwind CSS. The code is structured, well-commented, and follows best practices for React and TypeScript development. The README.md file includes instructions for setting up and running the project.